{
    "version": "https://jsonfeed.org/version/1",
    "title": "夜殿下的博客",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/02/10/less%2018-19/",
            "url": "http://example.com/2022/02/10/less%2018-19/",
            "title": "less18~19",
            "date_published": "2022-02-10T06:36:38.000Z",
            "content_html": "<p><strong>Less 18：</strong></p>\n<p>进入 18 关后，输入用户名和密码，回显 user agent=…………</p>\n<p><a href=\"https://sm.ms/image/N2Ug6SkJb5tMPd3\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/N2Ug6SkJb5tMPd3.png\" ></a></p>\n<p>再因为在 id 和 passwd 上输入 ‘ 均无回显</p>\n<p><a href=\"https://sm.ms/image/75RLDZY8Td6Iego\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/75RLDZY8Td6Iego.png\" ></a> 可猜测，注入点在 user agent 上，试验之后可证明</p>\n<p><a href=\"https://sm.ms/image/PG9oRMTA4xi2V3d\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/PG9oRMTA4xi2V3d.png\" ></a></p>\n<p>此处可使用 extractvalue 函数：</p>\n<p>**extractvalue 函数使用：**extractvalue (1,concat (0x7e,(构造语句),0x7e))</p>\n<p><a href=\"https://sm.ms/image/K2ewRiSuLzDvcJd\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/K2ewRiSuLzDvcJd.png\" ></a>（此处需注意单引号的闭合）</p>\n<p>之后和之前一样进行查库查表的操作</p>\n<p><a href=\"https://sm.ms/image/4pKriclkov1zJVx\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/4pKriclkov1zJVx.png\" ></a><a href=\"https://sm.ms/image/yAs5tYT9VP2Zirv\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/yAs5tYT9VP2Zirv.png\" ></a></p>\n<p>Less 19：</p>\n<p>与 18 关相似，唯一不同的是，18 关的注入点在 user agent，而 19 关的注入点在 referer 上</p>\n<p><a href=\"https://sm.ms/image/Q7SOqTNaFcWPix8\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/Q7SOqTNaFcWPix8.png\" ></a></p>\n<p>再次使用 extractvalue 函数：</p>\n<p><a href=\"https://sm.ms/image/P3KLjinXrhZa9cH\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/P3KLjinXrhZa9cH.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/ZwuvsWO4BIYrzFq\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/10/ZwuvsWO4BIYrzFq.png\" ></a></p>\n<p>之后的操作类似</p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2022/02/09/less17/",
            "url": "http://example.com/2022/02/09/less17/",
            "title": "less17",
            "date_published": "2022-02-09T10:09:50.000Z",
            "content_html": "<p>进入页面时，有提示 PASSWORD RESET，可判断从密码输入入手。输入已知用户名（正常情况需先得到正确的用户名才可进行以下后续操作），得到密码成功重置的信息。</p>\n<p><a href=\"https://sm.ms/image/cwq2gIFM1APyna7\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/09/cwq2gIFM1APyna7.png\" ></a></p>\n<p>此处会使用到 updatexl 函数</p>\n<p>**updatexml 函数使用：**updatexml (1,concat (0x7e,(构造语句),0x7e),1)</p>\n<p>其中 “构造语句” 为查库查表查列查字段的指令</p>\n<p>concat 是：将所回显语句连接成一个字符串（因此回显会出现 error 报错字样，后面则是想要的信息）</p>\n<p>可用 bp 抓包后，进行预览操作：</p>\n<p><a href=\"https://sm.ms/image/PdXrA4k5S6GnLRp\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/09/PdXrA4k5S6GnLRp.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/2fjI43kit1LNMTJ\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/09/2fjI43kit1LNMTJ.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/QaA4XCNOhclq6g1\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/09/QaA4XCNOhclq6g1.png\" ></a></p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2022/02/08/%E5%9F%BA%E4%BA%8EPOST%E7%B1%BB%E5%9E%8B%E7%9A%84sql%E6%B3%A8%E5%85%A5/",
            "url": "http://example.com/2022/02/08/%E5%9F%BA%E4%BA%8EPOST%E7%B1%BB%E5%9E%8B%E7%9A%84sql%E6%B3%A8%E5%85%A5/",
            "title": "基于POST类型的sql注入",
            "date_published": "2022-02-08T14:49:41.000Z",
            "content_html": "<p><strong>POST 与 get 的区别：</strong></p>\n<p>POST 体现在提交数据上，而 get 体现于数据获取上</p>\n<p><strong>less 11 基于 POST 的单引号 sql 注入</strong></p>\n<p>首先用 bp 对 POST 数据进行抓包得到 post 码</p>\n<p><a href=\"https://sm.ms/image/7AgksHTzERBlaOv\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/7AgksHTzERBlaOv.png\" ></a></p>\n<p>之后可在最后的 post 码上进行数据的 sql 注入的操作</p>\n<p><a href=\"https://sm.ms/image/FyqelUTx1PENStX\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/FyqelUTx1PENStX.png\" ></a></p>\n<p>由于在 hackbar 上使用 post data 操作无反应（还未清楚原因）</p>\n<p>此处用 bp 上的预览图操作</p>\n<p><a href=\"https://sm.ms/image/UR41v2SDBkrdXKN\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/UR41v2SDBkrdXKN.png\" ></a> 当使用 order by 3 时，出现报错，可说明表仅有俩行。（union select 1，……）</p>\n<p>之后于 less 1 相似，以查库查表查字段的方式，依次查出内容即可</p>\n<p><a href=\"https://sm.ms/image/MhzQgFImybk5RYj\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/MhzQgFImybk5RYj.png\" ></a></p>\n<p>less 12~13 则是基于不同引号类型的 post sql 注入，步骤与 less11 相似</p>\n<p><strong>此处总结一下不同引号类型的 sql 注入：</strong></p>\n<p><strong>’</strong></p>\n<p><strong>&quot;</strong></p>\n<p><strong>’)</strong></p>\n<p><strong>&quot;)</strong></p>\n<p><strong>’))</strong></p>\n<p><strong>&quot;))</strong></p>\n<p>引号注入类型共有以上六种，做题手动操作时，只需依次列举输入即可。</p>\n<p><strong>less 14~16 基于 POST 类型的盲注输入：</strong></p>\n<p>在进行 less 15 时会发现，当输入正确，则仅有登入成功的提示，并无回显数据，而输入错误也只有登入失败的提示，可判断此处为盲注。</p>\n<p><a href=\"https://sm.ms/image/d2t9GaLU4567A3o\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/d2t9GaLU4567A3o.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/6V7MxsQ4ovqzcE8\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/6V7MxsQ4ovqzcE8.png\" ></a></p>\n<p>此处可用 if 语句配合 sleep 函数来判断正误</p>\n<p><a href=\"https://sm.ms/image/WAlMRuCFIaJqNH5\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/WAlMRuCFIaJqNH5.png\" ></a></p>\n<p>当发现数据加载比之前更慢，可判断是 sleep 函数的延时效用。</p>\n<p>也可通过正误回显判断</p>\n<p><a href=\"https://sm.ms/image/3OrU1jJq9swEYTQ\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/3OrU1jJq9swEYTQ.png\" ></a></p>\n<p>也可用 bp 进行暴力破解</p>\n<p><a href=\"https://sm.ms/image/Gis82KyODcw1Z9P\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/02/08/Gis82KyODcw1Z9P.png\" ></a></p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2022/01/27/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%E5%92%8C%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8%E7%9A%84%E7%AE%80%E6%98%93%E6%89%8B%E5%8A%A8%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/2022/01/27/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%E5%92%8C%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8%E7%9A%84%E7%AE%80%E6%98%93%E6%89%8B%E5%8A%A8%E6%93%8D%E4%BD%9C/",
            "title": "布尔盲注和时间盲注的简易手动操作",
            "date_published": "2022-01-26T21:03:11.000Z",
            "content_html": "<p>在 less 5 这关时，会发现按照之前的方法输入？id=1’–+，他并不会给你想要的信息，而是会回显 you are in</p>\n<p><a href=\"https://sm.ms/image/fBMIk3NUyjdrwtF\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/21/fBMIk3NUyjdrwtF.png\" ></a></p>\n<p>可以判断，该处注入方式为布尔盲注（即只有正确了只回显 you are in）</p>\n<p>此处可以用 length (database ())=? 来推出 database 数据库的库名有几个字符长度</p>\n<p><a href=\"https://sm.ms/image/nQZ5XT8pDf1bA34\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/21/nQZ5XT8pDf1bA34.png\" ></a></p>\n<p>而后可根据二分法 ascii (substr (database ()))=?（&gt;? 或 &lt;?）来推断库名</p>\n<p><em>PS. 其中 substr 括号内是数据库查找方式，也可以是查表查列查字段，详见 less1</em></p>\n<p><a href=\"https://sm.ms/image/VTzI9HZwkAKmhC8\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/21/VTzI9HZwkAKmhC8.png\" ></a></p>\n<p>less 6 是基于 less 5 的基础上，由单引号闭合改为了双引号闭合</p>\n<p><a href=\"https://sm.ms/image/HDB7CnPb3hZXp8V\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/21/HDB7CnPb3hZXp8V.png\" ></a></p>\n<p><strong>if 函数使用</strong></p>\n<p>if (条件，正确回显，错误回显)</p>\n<p><a href=\"https://sm.ms/image/5v2WN1z6pKdkfbX\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/5v2WN1z6pKdkfbX.png\" ></a></p>\n<p><strong>sleep 睡眠使用</strong></p>\n<p><a href=\"https://sm.ms/image/vPkOWYBQ35XRnAw\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/vPkOWYBQ35XRnAw.png\" ></a></p>\n<p>如图可知，程序运行（睡眠）了 5s。</p>\n<p>之后的第八关和第九关、第十关，均可用 if 和 sleep 来手动操作（区别就是 id=1 后的闭合符合不同，详见第 less 1~4。</p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2022/01/25/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E4%BB%A5%E5%8F%8A%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%9A%84%E5%B0%8F%E8%A7%81%E8%A7%A3/",
            "url": "http://example.com/2022/01/25/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E4%BB%A5%E5%8F%8A%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%9A%84%E5%B0%8F%E8%A7%81%E8%A7%A3/",
            "title": "文件传输以及一句话木马的小见解",
            "date_published": "2022-01-25T15:22:12.000Z",
            "content_html": "<p><strong>一句话木马的总结：</strong></p>\n<p>php 型：<?php @eval($_POST['ydx']);?></p>\n<p>asp 型：&lt;% eval request (“ydx”)%&gt;</p>\n<p>aspx 型：&lt;%@ page Language=“Jscript”%&gt; &lt;% eval (Request.Item [“ydx”],“unsafe”);%&gt;</p>\n<p>其中 ydx 为密码，即可在中国菜刀中输入使用</p>\n<p><a href=\"https://sm.ms/image/sXaGIPkK9FfTbQJ\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/26/sXaGIPkK9FfTbQJ.png\" ></a> eval（）为函数，括号内即要执行的代码</p>\n<p>@表示不报错，即就算执行错误，也不报错</p>\n<p>传输数据的两种方法：get、post</p>\n<p>其中 get 是在信息头的 url 路径下中存放数据</p>\n<p>而 post 是在消息体中存放数据</p>\n<p><strong>图片木马的生成</strong></p>\n<p><a href=\"https://sm.ms/image/287otRTsdCibGQa\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/287otRTsdCibGQa.png\" ></a></p>\n<p>其中 b 表示二进制文件（+ 后即要覆盖进图片的木马）</p>\n<p>a 表示 ASCLL 码文件（a 后即生成的图片木马）</p>\n<p><strong>Less 7</strong></p>\n<p>先登入进 mysql 命令行，输入 show variables like'secure%' 查看是否开启文件读写权限</p>\n<p><a href=\"https://sm.ms/image/kjva5tUOPKHoAuQ\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/kjva5tUOPKHoAuQ.png\" ></a></p>\n<p>若为 NULL 即为没有权限，此时需到 mysql 文件夹中，找到对应的 my.ini 文件，在其中加入<a href=\"https://sm.ms/image/WivGrl437YkceOC\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/WivGrl437YkceOC.png\" ></a></p>\n<p>之后重启 mysql 服务（这里并不是关闭运行指令框，而是关闭 mysql 服务再重启，再开指令框）</p>\n<p>可看到 NULL 变成你输入的地址</p>\n<p><a href=\"https://sm.ms/image/yLajvJ9Xh2ZE4fR\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/yLajvJ9Xh2ZE4fR.png\" ></a></p>\n<p>此时可用上图所示方法使用 select ’‘ into outfile ’‘；函数进行文件的上传</p>\n<p>select 后’ ‘内表示要上传的文件内容，outfile 后’ ‘内表示文件上传的地址，最后是所上传文件的名称和格式（此处用 \\ 是因为 \\ 容易报错，不推荐使用）</p>\n<p>上传成功之后可以 select load_file 函数查看文件内容</p>\n<p><a href=\"https://sm.ms/image/7BQacsHXRNkfAeo\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/7BQacsHXRNkfAeo.png\" ></a></p>\n<p>其中 (’  ') 内即文件地址和所要读取的文件名</p>\n<p>在 less 7 中上传文件<a href=\"https://sm.ms/image/5AQTEOoHUj6L847\" target=\"_blank\"><img src=\"https://s2.loli.net/2022/01/27/5AQTEOoHUj6L847.png\" ></a></p>\n<p>虽然回显说有一个 sql 语法错误，但翻看 Less 7 的目录，会发现文件已传输成功。</p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2021/12/19/%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC%E7%9A%84%E7%AE%80%E8%A6%81%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2021/12/19/%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC%E7%9A%84%E7%AE%80%E8%A6%81%E6%80%BB%E7%BB%93/",
            "title": "盲注脚本的简要总结",
            "date_published": "2021-12-19T05:25:49.000Z",
            "content_html": "<p>import requests   // 引用的数据库名称<br>\n import time</p>\n<p>url:“网址”</p>\n<p>dict=&quot;&quot;          // 字典内容，自己编写</p>\n<p>flag=&quot;&quot;        // 输出的 flag？</p>\n<p>for i in range(0,11):<br>\nfor char in dict:                                          // 输出字典内容<br>\n payload=“and substr  …………”             // 输入对应查询函数<br>\n url=url+payload<br>\nprint(url)<br>\nr=requests.get(url)<br>\n if “are” in r.text:                     // 判断 are 是否在 r.text 文件内<br>\n flag+=char</p>\n<p>print(flag)</p>\n",
            "tags": [
                "知识小结"
            ]
        },
        {
            "id": "http://example.com/2021/11/14/%E7%BD%91%E7%BB%9C%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2/",
            "url": "http://example.com/2021/11/14/%E7%BD%91%E7%BB%9C%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2/",
            "title": "网络源代码的简单搜索",
            "date_published": "2021-11-14T13:56:13.000Z",
            "content_html": "<p>打开 Buu 的极客大挑战的 Have fun1</p>\n<p>会看见一个撸猫界面，除此之外啥也莫得。</p>\n<p><a href=\"https://sm.ms/image/ayjxuTAQm3iLNrH\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/ayjxuTAQm3iLNrH.png\" ></a></p>\n<p>那就打开网站源代码看看，发现了底下有线索 cat=dog<a href=\"https://sm.ms/image/X38dLsJ5hSqG9QU\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/X38dLsJ5hSqG9QU.png\" ></a></p>\n<p>试着用？cat=dog 尝试注入，得到 flag<a href=\"https://sm.ms/image/XsYlgpVrW6vtK89\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/XsYlgpVrW6vtK89.png\" ></a></p>\n<p>小结：无思路时，不妨注意一下网络源代码里的信息和线索。</p>\n",
            "tags": [
                "学习小结"
            ]
        },
        {
            "id": "http://example.com/2021/11/14/%E5%85%B3%E4%BA%8Esql%E6%B3%A8%E5%85%A5%E7%9A%84%E5%B0%8F%E7%BB%93/",
            "url": "http://example.com/2021/11/14/%E5%85%B3%E4%BA%8Esql%E6%B3%A8%E5%85%A5%E7%9A%84%E5%B0%8F%E7%BB%93/",
            "title": "关于sql注入的小结",
            "date_published": "2021-11-14T12:03:43.000Z",
            "content_html": "<p>打开 NSS easy sql，发现题目提示 “输入点什么”。且标题提示 wllm，不妨假设，sql 注入点的名字就是 wllm。</p>\n<p>使用 order by 函数，可查得，数据库的表共有三列。</p>\n<p><a href=\"https://sm.ms/image/p6UmunyJahMvtcX\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/p6UmunyJahMvtcX.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/tOisek7pPMl8znb\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/tOisek7pPMl8znb.png\" ></a></p>\n<p>之后再用联合查询语句 union select 1,2,database ()–+，可查出数据库名为 test_db（注意：如果回显没有东西，就把前面的 1 改为 - 1 或者一个不可读的数）</p>\n<p><a href=\"https://sm.ms/image/4yZtH6rlDLeKV9A\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/4yZtH6rlDLeKV9A.png\" ></a></p>\n<p>查得数据库名后，再使用查表指令</p>\n<p><a href=\"https://sm.ms/image/1cFYt8eVxWPyvuw\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/1cFYt8eVxWPyvuw.png\" ></a></p>\n<p>再从表中找到对应列</p>\n<p><a href=\"https://sm.ms/image/cEzegt2mYNjW18a\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/cEzegt2mYNjW18a.png\" ></a></p>\n<p>最后查字段爆出 flag<a href=\"https://sm.ms/image/rP5Ghv8HXOxMkbD\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/rP5Ghv8HXOxMkbD.png\" ></a></p>\n<p>小收获：group_concat 函数的应用，输入对应的库，表，列，会将对应的信息，排成一列，回显出来。</p>\n<p>极客大挑战的 love sql 与 NSS 的 easy sql 类似。多了一个万能钥匙的使用和 #转 url 编码的转换（题目中 #和–+ 等注释符可能被删除。</p>\n<p>此时认清楚，%23 是 #的 url 编码显得极其重要。</p>\n<p><a href=\"https://sm.ms/image/ZG3zuiaXdUNWvsK\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/ZG3zuiaXdUNWvsK.jpg\" ></a></p>\n<p>username=1 后即为可操作的位置。</p>\n<p>万能钥匙<a href=\"https://sm.ms/image/JTSpFAd584gteOh\" target=\"_blank\"><img src=\"https://i.loli.net/2021/11/14/JTSpFAd584gteOh.png\" ></a></p>\n",
            "tags": [
                "学习小结"
            ]
        },
        {
            "id": "http://example.com/2021/10/22/%E5%85%B3%E4%BA%8Ephpstudy2018%E7%9A%84Apache%E7%9A%84%E8%A1%80%E6%B3%AA%E6%95%99%E8%AE%AD/",
            "url": "http://example.com/2021/10/22/%E5%85%B3%E4%BA%8Ephpstudy2018%E7%9A%84Apache%E7%9A%84%E8%A1%80%E6%B3%AA%E6%95%99%E8%AE%AD/",
            "title": "关于phpstudy2018的Apache的血泪教训",
            "date_published": "2021-10-22T12:30:26.000Z",
            "content_html": "<p>问题来的就挺突然的，在一次启动 phpstudy 准备刷靶场的时候，发现 phpstudy 的 Apache 又红了。但是和往常不同，这次即便我卸载重装，依旧还是没用。在一顿搜索操作后，排除了防火墙问题和窗口占用问题，将苗头锁向 phpstudy 的配置文件问题上。</p>\n<p>挺玄学的说实话，啥都没弄，它自己坏，和玩似的……</p>\n<p>打开 D:\\phpStudy\\PHPTutorial\\Apache\\bin，并开启该文件夹的运行指令窗口，输入 httpd.exe</p>\n<p>不输不知道，一输吓一跳 /(ㄒ o ㄒ)/</p>\n<p><a href=\"https://sm.ms/image/xYQHy5aMR2ZXnz8\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/xYQHy5aMR2ZXnz8.png\" ></a></p>\n<p><a href=\"https://sm.ms/image/17gtrWmEbNMz4Al\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/17gtrWmEbNMz4Al.png\" ></a><a href=\"https://sm.ms/image/EduUAQ9mpbThRfG\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/EduUAQ9mpbThRfG.png\" ></a></p>\n<p>前前后后共出现了八种错误……………………</p>\n<p>在解决以下错误时<a href=\"https://sm.ms/image/17gtrWmEbNMz4Al\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/17gtrWmEbNMz4Al.png\" ></a></p>\n<p>先去到 D:\\phpStudy\\PHPTutorial\\Apache\\conf，打开 httpd.conf，用快捷方式，锁定到端口栏，并修改端口</p>\n<p><a href=\"https://sm.ms/image/78QSVusxbrnCl6k\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/78QSVusxbrnCl6k.png\" ></a></p>\n<p>遇到以下配置文件语法问题时<a href=\"https://sm.ms/image/xYQHy5aMR2ZXnz8\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/xYQHy5aMR2ZXnz8.png\" ></a><a href=\"https://sm.ms/image/EduUAQ9mpbThRfG\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/EduUAQ9mpbThRfG.png\" ></a></p>\n<p>根据错误位置，进入相应的文件，到对应函数，当报错信息只写明报错位置时，我采取的方法是用 #放在句前，将错误语句注释<a href=\"https://sm.ms/image/RJ4kozgF9pxwXT2\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/RJ4kozgF9pxwXT2.png\" ></a></p>\n<p>​    而以下有说明的错误类型，则是依靠万能的百度，按照教程，进行修改。</p>\n<p>之后，就，就会得到一个绿色的 Apache！</p>\n<p><a href=\"https://sm.ms/image/aUpJOxK8Y2jCeHT\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/22/aUpJOxK8Y2jCeHT.png\" ></a></p>\n<p>PS. 之后遇到什么奇奇怪怪的问题，还会陆续跟进！</p>\n",
            "tags": [
                "乱七八糟"
            ]
        },
        {
            "id": "http://example.com/2021/10/21/%E5%85%B3%E4%BA%8Eless%202%E5%88%B0less%204%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2021/10/21/%E5%85%B3%E4%BA%8Eless%202%E5%88%B0less%204%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/",
            "title": "关于less 2到lees 4的小总结",
            "date_published": "2021-10-21T08:18:43.000Z",
            "content_html": "<p><a href=\"https://sm.ms/image/3FQCeWsd7aivnBI\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/3FQCeWsd7aivnBI.jpg\" ></a></p>\n<p><a href=\"https://sm.ms/image/AWe683cGfxhyN9q\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/AWe683cGfxhyN9q.jpg\" ></a></p>\n<p>通过对比 less 1 和 less 2，在输入？id=1’时报错信息的不同可以看出 less 1 是 near&quot;1&quot;, 而 less 2 是 near’’。因此在执行指令时，less 2 比 less 1 在 sql 语法报错上少了一个’。</p>\n<p>以查列指令为例：</p>\n<p><a href=\"https://sm.ms/image/eJpKRTFruAvjG9t\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/eJpKRTFruAvjG9t.png\" ></a></p>\n<p>同理，在 less 3 的时候报错信息为</p>\n<p><a href=\"https://sm.ms/image/AXgrWo24IseNyqU\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/AXgrWo24IseNyqU.png\" ></a></p>\n<p>即需要我们输入？id=1’) 才可成功执行之后的 sql 注入指令<a href=\"https://sm.ms/image/1pHMoOJKui3cNmE\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/1pHMoOJKui3cNmE.png\" ></a></p>\n<p>less 4</p>\n<p><a href=\"https://sm.ms/image/are9OcdXmiDqTFs\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/are9OcdXmiDqTFs.png\" ></a></p>\n<p>显示需输入？id=1&quot; 才可执行后续命令，且需使前面的内容报错，才可执行（有点不理解，因为有时候没报错也可以执行）<a href=\"https://sm.ms/image/7HAad3kZfTLYtqM\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/21/7HAad3kZfTLYtqM.png\" ></a></p>\n<p>后续的操作均与 less 1 一样。</p>\n<p>总结：当发现 SQL 语法错误漏洞时，得弄清是什么样的错误漏洞，并根据实际情况进行调整。</p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2021/10/08/%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%89%93sqli-lab%E9%9D%B6%E5%9C%BA%EF%BC%88less1%EF%BC%89%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2021/10/08/%E6%96%B0%E6%89%8B%E5%B0%8F%E7%99%BD%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%89%93sqli-lab%E9%9D%B6%E5%9C%BA%EF%BC%88less1%EF%BC%89%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/",
            "title": "新手小白第一次打sqli-lab靶场（less1）的小总结",
            "date_published": "2021-10-08T15:23:36.000Z",
            "content_html": "<p><strong>首先总结一些，在学习 less 1 时的一些 sql 注入的语言</strong></p>\n<p>注释符 (即之后的语句不再执行）： --+、-- （空格）【/**/ 可代替空格】、#</p>\n<p>查库：select schema_name from information_schema.schemata</p>\n<p>查表：select table_name from information_schema.tables where table_schema=‘security’</p>\n<p>查列：select column_name from information_schema.columns where table_name=‘users’</p>\n<p>order by _(数字)</p>\n<p>union select (联合查询)</p>\n<p><strong>一些用到的函数</strong></p>\n<p>group concat（将所有数据连接做成一行进行显示）</p>\n<p>concat_ws（并列指令）【我感觉是并列指令】</p>\n<p>永恒为真：and 1=1</p>\n<p><a href=\"https://sm.ms/image/kVyK1A56GOfTRCv\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/kVyK1A56GOfTRCv.png\" style=\"zoom:50%;\"  ></a></p>\n<p>永恒为假：and 1=2</p>\n<p><a href=\"https://sm.ms/image/jZ7aEmdAHCND36S\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/jZ7aEmdAHCND36S.png\" ></a></p>\n<p><strong>自己的一些做题过程</strong></p>\n<p>看到提示里的 id 字样，用到？(get) 指令，得到一个 id</p>\n<p><a href=\"https://sm.ms/image/uyGpZ1rg2hMCeXV\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/uyGpZ1rg2hMCeXV.png\" ></a></p>\n<p>之后加入’，会发现出现了 SQL syntax 的报错，则存在 SQL 漏洞</p>\n<p><a href=\"https://sm.ms/image/eQLPclu7mkpz4Ng\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/eQLPclu7mkpz4Ng.png\" ></a></p>\n<p>这时候用 order by 指令可以知道数据库共有三列</p>\n<p>并用查库指令知道数据库的资料</p>\n<p><a href=\"https://sm.ms/image/5fsKBE3dhAWnRzO\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/5fsKBE3dhAWnRzO.png\" ></a></p>\n<p>再分别用查表指令</p>\n<p><a href=\"https://sm.ms/image/COTStXn7dKyW5Qs\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/COTStXn7dKyW5Qs.png\" ></a></p>\n<p>这里涉及单引号问题（我现在也不清楚单引号问题是什么）可改 16 进制表示（0x……）</p>\n<p><a href=\"https://sm.ms/image/ZioVd7aKuhgTCEB\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/ZioVd7aKuhgTCEB.png\" ></a></p>\n<p>查列</p>\n<p><a href=\"https://sm.ms/image/FUKJVSbd4IzQ1PL\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/FUKJVSbd4IzQ1PL.png\" ></a></p>\n<p>改 16 进制</p>\n<p><a href=\"https://sm.ms/image/HV134FpxfEeAwrN\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/08/HV134FpxfEeAwrN.png\" ></a></p>\n<p>查字段</p>\n<p><a href=\"https://sm.ms/image/ZxJq4zo1r6yHF79\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/09/ZxJq4zo1r6yHF79.png\" ></a></p>\n<p>用 concat_ws 函数联合 group_concat 函数爆数据库</p>\n<p><a href=\"https://sm.ms/image/9IwizF48hADQMqL\" target=\"_blank\"><img src=\"https://i.loli.net/2021/10/09/9IwizF48hADQMqL.png\" ></a></p>\n<p>学习时参考了：<a href=\"https://www.bilibili.com/video/BV1e441127Rd?p=4\">https://www.bilibili.com/video/BV1e441127Rd?p=4</a></p>\n<p>​                           还有一些没记住地址的博客</p>\n<p>​                           还有炜刚学长的 blog</p>\n",
            "tags": [
                "less 1"
            ]
        },
        {
            "id": "http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E5%8F%91%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9C%8B%E6%B3%95/",
            "url": "http://example.com/2021/09/20/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E5%8F%91%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9C%8B%E6%B3%95/",
            "title": "关于自己第一次换主题和发博客的一些看法",
            "date_published": "2021-09-20T15:03:02.000Z",
            "content_html": "<p>No.1  小白刚开始换主题的时候，不要追求好看（因为好看的主题配置都不大容易）</p>\n<p>No.2  分清下载 theme 文件目录根里的配置文件（_config.yml）和 blog 文件目录根里的配置文件的区别，theme 里的配置文件是弄到时候博客界面里的内容，blog 里的配置文件里是定位 theme 文件（配置文件的 theme: **, 需要改成你下载的主题名）和博客网站的一些东西。</p>\n<p>No.3  博客网站里的东西都在后台的数据库，如果有什么想要换的文字或者图片，可以在 blog 文件里找到相应的进行替换（但是图片的名字和格式不能改，因为改了到时候配置信息也得跟着改，不然无法读取）。</p>\n<p>No.4  想改 blog 文件的时候，可以复制 blog 在其他磁盘先进行测试，测试成功再替换原本的 blog 文件（防止到时候改错乱码，又要补救，改来改去）</p>\n<p>No.5  发博客的时候，记得在 tags: *******(冒号要英文的冒号。不要忘了中间的空格，不然上传不了远台仓库)。</p>\n",
            "tags": [
                "个人经验"
            ]
        },
        {
            "id": "http://example.com/2021/09/20/%E7%94%B5%E8%84%91%E5%B0%8F%E7%99%BD%E6%8B%A5%E6%9C%89%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/",
            "url": "http://example.com/2021/09/20/%E7%94%B5%E8%84%91%E5%B0%8F%E7%99%BD%E6%8B%A5%E6%9C%89%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/",
            "title": "电脑小白拥有自己博客的第一天",
            "date_published": "2021-09-20T14:57:16.000Z",
            "content_html": "<p>自此小白开始了在计算机界浪迹天涯的 “欢乐” 旅程。</p>\n",
            "tags": [
                "个人感慨"
            ]
        },
        {
            "id": "http://example.com/2021/09/19/hello-world/",
            "url": "http://example.com/2021/09/19/hello-world/",
            "title": "夜殿下的第一条博客",
            "date_published": "2021-09-19T04:29:22.406Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo new \"My New Post\"\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}